@mixin columns-width($property, $columns, $count) {
  #{$property}: get-width($columns, $count, is-percent-unit($count));
}

@mixin offsets-width($property, $columns, $count) {
  #{$property}: get-width($columns, 1, is-percent-unit($count)) * $count;
}

@mixin queries($width, $queries) {
  $query: map-get($queries, $width);

  @if ($query == $default-viewport) {
    @content;
  } @else {
    @media screen and (min-width: $query) {
      @content;
    }
  }
}

@mixin columns(
  $block: $block-delimiter,
  $bps: $breakpoints,
  $columns: $column-count,
  $modifier: $modifier-delimiter,
  $properties: $column-properties,
  $selector: $column-selector,
  $queries: $queries
) {
  @each $bp in $bps {
    @include queries($bp, $queries) {
      @for $i from 0 through $columns {
        @if ($i == 0) {
          #{$selector}#{$block}#{$bp} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;

            @content;
          }
        } @else {
          #{$selector}#{$block}#{$bp}#{$modifier}#{$i} {
            @content;

            @each $prop in $properties {
              @include columns-width($prop, $columns, $i);
            }
          }
        }
      }
    }
  }
}

@mixin offsets(
  $block: $block-delimiter,
  $bps: $breakpoints,
  $col: $column-selector,
  $columns: $column-count,
  $modifier: $modifier-delimiter,
  $offset: $offset-modifier,
  $properties: $offset-properties,
  $queries: $queries
) {
  @each $bp in $bps {
    @for $i from 0 through $columns - 1 {
      #{$col}#{$block}#{$bp}#{$modifier}#{$offset}#{$modifier}#{$i} {
        @include queries($bp, $queries) {
          @content;

          @each $prop in $properties {
            @include offsets-width($prop, $columns, $i);
          }
        }
      }
    }
  }
}

@mixin defaults(
  $block: $block-delimiter,
  $bps: $breakpoints,
  $col: $column-selector,
  $columns: $column-count,
  $element: $element-delimiter,
  $modifier: $modifier-delimiter,
  $offset: $offset-modifier
) {
  @each $bp in $bps {
    @include queries($bp, $queries) {
      @for $i from 0 through 12 {
        @if $i == 0 {
          #{$col}#{$block}#{$bp} {
            @content;
          }
        } @else if $i == 12 {
          #{$col}#{$block}#{$bp}#{$element}#{$i} {
            @content;
          }
        } @else if $i != 0 {
          #{$col}#{$block}#{$bp}#{$element}#{$i},
          #{$col}#{$block}#{$bp}#{$modifier}#{$offset}#{$modifier}#{$i} {
            @content;
          }
        }
      }
    }
  }
}

@mixin helper(
  $selector,
  $bps: $breakpoints,
  $modifier: $modifier-delimiter
) {
  @each $bp in $bps {
    #{$selector}#{$modifier-delimiter}#{$bp} {
      @include queries($bp, $queries) {
        @content;
      }
    }
  }
}
